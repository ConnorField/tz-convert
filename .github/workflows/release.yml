name: Release

on:
  push:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1.9.0
        with:
          toolchain: stable

      - name: Build project
        run: cargo build --release

      - name: Upload Release Asset
        uses: actions/upload-artifact@v3
        with:
          name: binary-linux
          path: target/release/tz-convert

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1.9.0
        with:
          toolchain: stable-x86_64-pc-windows-msvc

      - name: Build project
        run: cargo build --release

      - name: Upload Release Asset
        uses: actions/upload-artifact@v3
        with:
          name: binary-windows
          path: target/release/tz-convert.exe

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest

    steps:
      - name: Download Linux binary
        uses: actions/download-artifact@v3
        with:
          name: binary-linux
          path: ./tz-convert-linux

      - name: Download Windows binary
        uses: actions/download-artifact@v3
        with:
          name: binary-windows
          path: ./tz-convert-windows.exe

      - name: Set up version tag
        id: vars
        run: |
          TAG_NAME=$(date +'%Y%m%d%H%M%S')
          echo "RELEASE_TAG=v$TAG_NAME" >> $GITHUB_ENV
          echo "RELEASE_NAME=Release $TAG_NAME" >> $GITHUB_ENV
          echo "RELEASE_DESC=Automatic build for commit $GITHUB_SHA. [View commit](https://github.com/${{ github.repository }}/commit/$GITHUB_SHA)" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: ${{ env.RELEASE_NAME }}
          body: ${{ env.RELEASE_DESC }}
          draft: false
          prerelease: false

      - name: Upload Linux binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tz-convert-linux
          asset_name: tz-convert-linux
          asset_content_type: application/octet-stream

      - name: Upload Windows binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tz-convert-windows.exe
          asset_name: tz-convert-windows.exe
          asset_content_type: application/octet-stream
